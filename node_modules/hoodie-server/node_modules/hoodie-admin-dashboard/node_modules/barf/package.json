{
  "name": "barf",
  "version": "1.0.3",
  "description": "async before and after filters for Backbone.Router",
  "repository": {
    "type": "git",
    "url": "git://github.com/svnlto/barf"
  },
  "main": "src/barf.js",
  "homepage": "https://github.com/svnlto/barf",
  "keywords": [
    "bacbkone",
    "async",
    "before",
    "after",
    "filter"
  ],
  "license": "MIT",
  "devDependencies": {
    "grunt-contrib-jshint": "~0.8.0",
    "grunt-contrib-watch": "~0.5.3",
    "browserify": "~3.30.2",
    "grunt-browserify": "~1.3.1",
    "load-grunt-tasks": "~0.3.0",
    "grunt": "~0.4.2",
    "grunt-cli": "~0.1.13",
    "grunt-contrib-concat": "~0.3.0",
    "grunt-contrib-uglify": "~0.3.2"
  },
  "readme": "# Barf - Backbone Async Route Filter\n\nBackbone Async Route Filter - Express style async route filters.\n\n## Installation\n\n```js\n  npm install barf\n```\n\nor if you're into bower\n\n```js\n  bower install --save barf\n```\n\n## Usage\n\n```js\n\nmodule.exports = Backbone.Router.extend({\n\n  routes: {\n    'users': 'usersList',\n    'users/:id': 'userShow'\n  },\n\n  before: {\n    // Using instance methods\n    'users(/:id)': 'checkAuth',\n    \n    // Using inline filter definition\n    '*any': function (fragment, args, next) {\n      console.log('Attempting to load ' + fragment + ' with arguments: ', args);\n      next();\n    }\n  },\n\n  after: {\n    // Google analytics tracking\n    '*any': function (fragment, args, next) {\n      goog._trackPageview(fragment);\n      next();\n    }\n  },\n\n  checkAuth: function (fragment, args, next) {\n\n    // make ajax to check authorisation here.\n    $.ajax({\n      data: somedata,\n      success: function () {\n        // if logged in execute next() to move ahead.\n        next();\n      },\n      error: function () {\n        //redirect to signIn page.\n        Backbone.history.navigate('', {\n          trigger: true \n        });\n      }\n    });\n  }\n});\n```\n\n## LICENSE\n\nMIT\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/svnlto/barf/issues"
  },
  "_id": "barf@1.0.3",
  "_from": "barf@^1.0.2"
}
